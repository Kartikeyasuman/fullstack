{"ast":null,"code":"var _jsxFileName = \"/Users/kartikeyasuman/Documents/Airbnb/client/src/pages/PlacesPage.js\",\n  _s = $RefreshSig$();\nimport Perks from \"../Perks\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, Navigate, useParams } from \"react-router-dom\";\nimport PhotosUploader from \"../PhotosUploader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PlacesFormPage() {\n  _s();\n  const action = useParams;\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [address, setAddress] = useState('');\n  const [addedPhotos, setAddedPhotos] = useState([]);\n  const [description, setDescription] = useState('');\n  const [perks, setPerks] = useState([]);\n  const [extraInfo, setExtraInfo] = useState('');\n  const [checkIn, setCheckIn] = useState('');\n  const [checkOut, setCheckOut] = useState('');\n  const [maxGuests, setMaxGuests] = useState(1);\n  const [price, setPrice] = useState(100);\n  const [redirectToPlacesList, setRedirectToPlacesList] = useState(false);\n  const [photoLink, setPhotoLink] = useState('');\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    axios.get('/places/' + id).then(response => {\n      const {\n        data\n      } = response;\n      setTitle(data.title);\n      setAddress(data.address);\n      setAddedPhotos(data.photos);\n      setDescription(data.description);\n      setPerks(data.perks);\n      setExtraInfo(data.extraInfo);\n      setCheckIn(data.checkIn);\n      setCheckOut(data.checkOut);\n      setMaxGuests(data.maxGuests);\n      setPrice(data.price);\n    });\n  }, [id]);\n  function inputHeader(text) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mt-4\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n  function inputDescription(text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-sm\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n  function preInput(header, description) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [inputHeader(header), inputDescription(description)]\n    }, void 0, true);\n  }\n  async function savePlace(ev) {\n    ev.preventDefault();\n    const placeData = {\n      title,\n      address,\n      addedPhotos,\n      description,\n      perks,\n      extraInfo,\n      checkIn,\n      checkOut,\n      maxGuests,\n      price\n    };\n    if (id) {\n      // update\n      await axios.put('/places', {\n        id,\n        ...placeData\n      });\n      setRedirectToPlacesList(true);\n    } else {\n      // new place\n      await axios.post('/places', placeData);\n      setRedirectToPlacesList(true);\n    }\n  }\n  function uploadPhoto(ev) {\n    const files = ev.target.files;\n    const data = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      data.append('photos', files[i]);\n    }\n    axios.post('/upload', data, {\n      headers: {\n        'Content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      const {\n        data: filenames\n      } = response;\n      setAddedPhotos(prev => {\n        return [...prev, ...filenames];\n      });\n    });\n  }\n  async function addPhotoByLink(ev) {\n    ev.preventDefault();\n    const {\n      data: filenames\n    } = await axios.post('/upload-by-link', {\n      link: photoLink\n    });\n    setAddedPhotos(prev => {\n      return [...prev, ...filenames];\n    });\n    setPhotoLink('');\n  }\n  async function addNewPlace(ev) {\n    ev.preventDefault();\n    const {\n      data\n    } = await axios.post('/places', {\n      title,\n      address,\n      addedPhotos,\n      perks,\n      description,\n      extraInfo,\n      checkIn,\n      checkOut,\n      maxGuests\n    });\n    setRedirectToPlacesList('/account/places');\n  }\n  if (redirectToPlacesList && action !== 'new') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/ account/places '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: action !== 'new' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"inline-flex gap-1 bg-primary text-white\",\n        children: \"Add a new place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 8\n  }, this);\n}\n_s(PlacesFormPage, \"xInlOPjcowo2vk3E6bdN7G4fgvA=\", false, function () {\n  return [useParams];\n});\n_c = PlacesFormPage;\nvar _c;\n$RefreshReg$(_c, \"PlacesFormPage\");","map":{"version":3,"names":["Perks","useEffect","useState","axios","Link","Navigate","useParams","PhotosUploader","jsxDEV","_jsxDEV","Fragment","_Fragment","PlacesFormPage","_s","action","id","title","setTitle","address","setAddress","addedPhotos","setAddedPhotos","description","setDescription","perks","setPerks","extraInfo","setExtraInfo","checkIn","setCheckIn","checkOut","setCheckOut","maxGuests","setMaxGuests","price","setPrice","redirectToPlacesList","setRedirectToPlacesList","photoLink","setPhotoLink","get","then","response","data","photos","inputHeader","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","inputDescription","preInput","header","savePlace","ev","preventDefault","placeData","put","post","uploadPhoto","files","target","FormData","i","length","append","headers","filenames","prev","addPhotoByLink","link","addNewPlace","to","_c","$RefreshReg$"],"sources":["/Users/kartikeyasuman/Documents/Airbnb/client/src/pages/PlacesPage.js"],"sourcesContent":["import Perks from \"../Perks\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Link, Navigate, useParams } from \"react-router-dom\";\nimport PhotosUploader from \"../PhotosUploader\";\n\nexport default function PlacesFormPage() {\n    const action=useParams\n    const { id } = useParams();\n    const [title, setTitle] = useState('');\n    const [address, setAddress] = useState('');\n    const [addedPhotos, setAddedPhotos] = useState([]);\n    const [description, setDescription] = useState('');\n    const [perks, setPerks] = useState([]);\n    const [extraInfo, setExtraInfo] = useState('');\n    const [checkIn, setCheckIn] = useState('');\n    const [checkOut, setCheckOut] = useState('');\n    const [maxGuests, setMaxGuests] = useState(1);\n    const [price, setPrice] = useState(100);\n    const [redirectToPlacesList, setRedirectToPlacesList  ] = useState(false);\n    const [photoLink, setPhotoLink] = useState('');\n    useEffect(() => {\n        if (!id) {\n            return;\n        }\n        axios.get('/places/' + id).then(response => {\n            const { data } = response;\n            setTitle(data.title);\n            setAddress(data.address);\n            setAddedPhotos(data.photos);\n            setDescription(data.description);\n            setPerks(data.perks);\n            setExtraInfo(data.extraInfo);\n            setCheckIn(data.checkIn);\n            setCheckOut(data.checkOut);\n            setMaxGuests(data.maxGuests);\n            setPrice(data.price);\n        });\n    }, [id]);\n    function inputHeader(text) {\n        return (\n            <h2 className=\"text-2xl mt-4\">{text}</h2>\n        );\n    }\n    function inputDescription(text) {\n        return (\n            <p className=\"text-gray-500 text-sm\">{text}</p>\n        );\n    }\n    function preInput(header, description) {\n        return (\n            <>\n                {inputHeader(header)}\n                {inputDescription(description)}\n            </>\n        );\n    }\n\n    async function savePlace(ev) {\n        ev.preventDefault();\n        const placeData = {\n            title, address, addedPhotos,\n            description, perks, extraInfo,\n            checkIn, checkOut, maxGuests, price,\n        };\n        if (id) {\n            // update\n            await axios.put('/places', {\n                id, ...placeData\n            });\n            setRedirectToPlacesList(true);\n        } else {\n            // new place\n            await axios.post('/places', placeData);\n            setRedirectToPlacesList(true);\n        }\n\n    }\n    function uploadPhoto(ev) {\n        const files = ev.target.files;\n        const data = new FormData();\n        for (let i = 0; i < files.length; i++) {\n          data.append('photos', files[i]);\n        }\n        axios.post('/upload', data, {\n          headers: {'Content-type':'multipart/form-data'}\n        }).then(response => {\n          const {data:filenames} = response;\n          setAddedPhotos(prev => {\n            return [...prev, ...filenames];\n          });\n        })\n      }\n   \n    async function addPhotoByLink(ev) {\n        ev.preventDefault();\n        const { data: filenames } = await axios.post('/upload-by-link', { link: photoLink });\n        setAddedPhotos(prev => {\n            return [...prev, ...filenames];\n        });\n        setPhotoLink('')\n    }\n   async function addNewPlace(ev){\n        ev.preventDefault()\n        const {data}= await axios.post('/places' , {\n            title,address,addedPhotos,perks,description,extraInfo,checkIn,checkOut,maxGuests\n        })\n       setRedirectToPlacesList('/account/places');\n    }\n    if (redirectToPlacesList && action!=='new') {\n        return <Navigate to={'/ account/places '} />\n    }\n\n    return (\n       <div>\n       {action!=='new' && (\n        <div className=\"text-center\">\n            <Link className=\"inline-flex gap-1 bg-primary text-white\">\n            Add a new place\n            </Link>\n        </div>\n       )}\n       </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AAC5D,OAAOC,cAAc,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAACR,SAAS;EACtB,MAAM;IAAES;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,GAAG,CAAC;EACvC,MAAM,CAACkC,oBAAoB,EAAEC,uBAAuB,CAAG,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACc,EAAE,EAAE;MACL;IACJ;IACAZ,KAAK,CAACqC,GAAG,CAAC,UAAU,GAAGzB,EAAE,CAAC,CAAC0B,IAAI,CAACC,QAAQ,IAAI;MACxC,MAAM;QAAEC;MAAK,CAAC,GAAGD,QAAQ;MACzBzB,QAAQ,CAAC0B,IAAI,CAAC3B,KAAK,CAAC;MACpBG,UAAU,CAACwB,IAAI,CAACzB,OAAO,CAAC;MACxBG,cAAc,CAACsB,IAAI,CAACC,MAAM,CAAC;MAC3BrB,cAAc,CAACoB,IAAI,CAACrB,WAAW,CAAC;MAChCG,QAAQ,CAACkB,IAAI,CAACnB,KAAK,CAAC;MACpBG,YAAY,CAACgB,IAAI,CAACjB,SAAS,CAAC;MAC5BG,UAAU,CAACc,IAAI,CAACf,OAAO,CAAC;MACxBG,WAAW,CAACY,IAAI,CAACb,QAAQ,CAAC;MAC1BG,YAAY,CAACU,IAAI,CAACX,SAAS,CAAC;MAC5BG,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,CAACnB,EAAE,CAAC,CAAC;EACR,SAAS8B,WAAWA,CAACC,IAAI,EAAE;IACvB,oBACIrC,OAAA;MAAIsC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEjD;EACA,SAASC,gBAAgBA,CAACP,IAAI,EAAE;IAC5B,oBACIrC,OAAA;MAAGsC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAEF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAEvD;EACA,SAASE,QAAQA,CAACC,MAAM,EAAEjC,WAAW,EAAE;IACnC,oBACIb,OAAA,CAAAE,SAAA;MAAAqC,QAAA,GACKH,WAAW,CAACU,MAAM,CAAC,EACnBF,gBAAgB,CAAC/B,WAAW,CAAC;IAAA,eAChC,CAAC;EAEX;EAEA,eAAekC,SAASA,CAACC,EAAE,EAAE;IACzBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,SAAS,GAAG;MACd3C,KAAK;MAAEE,OAAO;MAAEE,WAAW;MAC3BE,WAAW;MAAEE,KAAK;MAAEE,SAAS;MAC7BE,OAAO;MAAEE,QAAQ;MAAEE,SAAS;MAAEE;IAClC,CAAC;IACD,IAAInB,EAAE,EAAE;MACJ;MACA,MAAMZ,KAAK,CAACyD,GAAG,CAAC,SAAS,EAAE;QACvB7C,EAAE;QAAE,GAAG4C;MACX,CAAC,CAAC;MACFtB,uBAAuB,CAAC,IAAI,CAAC;IACjC,CAAC,MAAM;MACH;MACA,MAAMlC,KAAK,CAAC0D,IAAI,CAAC,SAAS,EAAEF,SAAS,CAAC;MACtCtB,uBAAuB,CAAC,IAAI,CAAC;IACjC;EAEJ;EACA,SAASyB,WAAWA,CAACL,EAAE,EAAE;IACrB,MAAMM,KAAK,GAAGN,EAAE,CAACO,MAAM,CAACD,KAAK;IAC7B,MAAMpB,IAAI,GAAG,IAAIsB,QAAQ,CAAC,CAAC;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCvB,IAAI,CAACyB,MAAM,CAAC,QAAQ,EAAEL,KAAK,CAACG,CAAC,CAAC,CAAC;IACjC;IACA/D,KAAK,CAAC0D,IAAI,CAAC,SAAS,EAAElB,IAAI,EAAE;MAC1B0B,OAAO,EAAE;QAAC,cAAc,EAAC;MAAqB;IAChD,CAAC,CAAC,CAAC5B,IAAI,CAACC,QAAQ,IAAI;MAClB,MAAM;QAACC,IAAI,EAAC2B;MAAS,CAAC,GAAG5B,QAAQ;MACjCrB,cAAc,CAACkD,IAAI,IAAI;QACrB,OAAO,CAAC,GAAGA,IAAI,EAAE,GAAGD,SAAS,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEF,eAAeE,cAAcA,CAACf,EAAE,EAAE;IAC9BA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAM;MAAEf,IAAI,EAAE2B;IAAU,CAAC,GAAG,MAAMnE,KAAK,CAAC0D,IAAI,CAAC,iBAAiB,EAAE;MAAEY,IAAI,EAAEnC;IAAU,CAAC,CAAC;IACpFjB,cAAc,CAACkD,IAAI,IAAI;MACnB,OAAO,CAAC,GAAGA,IAAI,EAAE,GAAGD,SAAS,CAAC;IAClC,CAAC,CAAC;IACF/B,YAAY,CAAC,EAAE,CAAC;EACpB;EACD,eAAemC,WAAWA,CAACjB,EAAE,EAAC;IACzBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAM;MAACf;IAAI,CAAC,GAAE,MAAMxC,KAAK,CAAC0D,IAAI,CAAC,SAAS,EAAG;MACvC7C,KAAK;MAACE,OAAO;MAACE,WAAW;MAACI,KAAK;MAACF,WAAW;MAACI,SAAS;MAACE,OAAO;MAACE,QAAQ;MAACE;IAC3E,CAAC,CAAC;IACHK,uBAAuB,CAAC,iBAAiB,CAAC;EAC7C;EACA,IAAID,oBAAoB,IAAItB,MAAM,KAAG,KAAK,EAAE;IACxC,oBAAOL,OAAA,CAACJ,QAAQ;MAACsE,EAAE,EAAE;IAAoB;MAAA1B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;EAEA,oBACG3C,OAAA;IAAAuC,QAAA,EACClC,MAAM,KAAG,KAAK,iBACdL,OAAA;MAAKsC,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBvC,OAAA,CAACL,IAAI;QAAC2C,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACvC,EAAA,CAtHuBD,cAAc;EAAA,QAEnBN,SAAS;AAAA;AAAAsE,EAAA,GAFJhE,cAAc;AAAA,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}